var Base = require('./Base.js').Base;

/*----------------------------------------------------------------------------*/
function Generator(model){
	this.constructor(model);
};
/*----------------------------------------------------------------------------*/
Generator.prototype = Object.create(Base.prototype);
/*----------------------------------------------------------------------------*/
Generator.prototype.constructor = function(model) {
	Base.prototype.constructor(model);
};
/*----------------------------------------------------------------------------*/
Generator.prototype.toString = function() {
	return "Generator (Fortran)";
};
/*----------------------------------------------------------------------------*/
Generator.prototype.generate = function(model) {
	if (model != undefined)
		this.setModel(model);
	
	var entity =  this;
	
	var cmd = [];
	
	
	cmd.push('! This an autogenerated file using simos.generator'); 
	cmd.push('! Please do not edit');
	cmd.push('! Babak Ommani, Offshore Hydrodynamic, MARINTEK ');
	cmd.push('');
	cmd.push('! ' + entity.getDescription());
	cmd.push('! Generated with ' + entity.getClassName() + ' version ' + entity.getVersion());
	cmd.push('!');
	cmd.push('!------------------------------------------------------------------------------');
	cmd.push('!******************************************************************************');
	cmd.push('module class_' + entity.getClassName() );
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('    !use statements');
	cmd.push(entity.importModules(1));
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('    implicit none');
    cmd.push('    private');
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('    public :: ' + entity.getType());    
	cmd.push('    type   :: ' + entity.getType());    
	cmd.push('        private');    
	cmd.push(entity.propertiesDeclaration(3));	   
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('    contain');    
	cmd.push('        private');    
	//cmd.push(entity.proceduresDeclaration(3));
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('    end type ' + entity.getType());    
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('contain');    
	cmd.push('    !---------------------------------------------------------------------------');
	//cmd.push(entity.initClass(1));
	cmd.push('    !---------------------------------------------------------------------------');
	//cmd.push(entity.propSetGet(1));
	cmd.push('    !---------------------------------------------------------------------------');
	//cmd.push(entity.reprFunc(1));
	cmd.push('    !---------------------------------------------------------------------------');
	//cmd.push(entity.typeReprFunc(1));
	cmd.push('    !---------------------------------------------------------------------------');
	//cmd.push(entity.dictReprFunc(1));
	cmd.push('    !---------------------------------------------------------------------------');
	cmd.push('!---------------------------------------------------------------------------');
	cmd.push('end module  class_' + entity.getClassName() );
	cmd.push('!******************************************************************************');
	
	return cmd.join('\n'); 
};

/*----------------------------------------------------------------------------*/
//module.exports = function(model) { return new PythonBase(model); };
exports.generator = new Generator();
