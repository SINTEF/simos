var MatlabBase = require('./MatlabBase.js').MatlabBase;

/*----------------------------------------------------------------------------*/
function MatlabGenerator(model){
	this.constructor(model);
};
/*----------------------------------------------------------------------------*/
MatlabGenerator.prototype = Object.create(MatlabBase.prototype);
/*----------------------------------------------------------------------------*/
MatlabGenerator.prototype.constructor = function(model) {
	MatlabBase.prototype.constructor(model);
};
/*----------------------------------------------------------------------------*/
MatlabGenerator.prototype.toString = function() {
	return "MatlabGenerator";
};
/*----------------------------------------------------------------------------*/
MatlabGenerator.prototype.generate = function(model) {
	if (model != undefined)
		this.setModel(model);
	
	var entity =  this;
	
	var cmd = [];
	
	cmd.push('% This an autogenerated file using simosjs.generator'); 
	cmd.push('% Please do not edit');
	cmd.push('');
	cmd.push('%**************************************************************************');
	cmd.push('%% ' + entity.getDescription());
	cmd.push('%% Generated with ' + entity.getClassName() + ' version ' + entity.getVersion());
	cmd.push('%**************************************************************************');
    cmd.push('');
	cmd.push('%**************************************************************************');
	cmd.push('classdef ' + entity.getClassName() + ' < handle');
	cmd.push('    %***********************************************************************');
    cmd.push('properties');
	cmd.push('');
	cmd.push(entity.initPublicProperties(2));
    cmd.push('');
	cmd.push('    end %properties');
	cmd.push('    %***********************************************************************');
	cmd.push('    properties (Constant)');
	cmd.push('');
	cmd.push(entity.initPublicConstantProperties(2));
    cmd.push('');
	cmd.push('    end %properties (Constant)');
	cmd.push('    %***********************************************************************');
	cmd.push('    properties (Dependent)');
	cmd.push('');
	cmd.push(entity.initPublicDependentProperties(2));
	cmd.push('');   
	cmd.push('    end %properties (Dependent)');
	cmd.push('    %***********************************************************************');
	cmd.push('    properties (SetAccess = protected)');
	cmd.push('');
	cmd.push('    end %properties (SetAccess = protected)');
	cmd.push('    %***********************************************************************');
	cmd.push('    properties ( Hidden)');
	cmd.push('');
	cmd.push(entity.initPublicHiddenProperties(2));
	cmd.push('   ');
	cmd.push('    end %properties ( Hidden)');
	cmd.push('    %***********************************************************************');
	cmd.push('    properties (SetAccess = private, Hidden)');
	cmd.push('');
	cmd.push(entity.initPrivateProperties(2));
	cmd.push('   ');
	cmd.push('    end %properties (SetAccess = private, Hidden)');
	cmd.push('    %***********************************************************************');
	cmd.push('    methods');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push(entity.constructorFunc(1));
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %Variables get and set functions');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('');
	cmd.push( entity.modelFunc(1));
	cmd.push('');
	cmd.push( entity.propSetGet(1));
    cmd.push('');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %Factory funcs ');
	cmd.push('    %-----------------------------------------------------------------------');
    cmd.push('');
	cmd.push( entity.factoryFunc(1));
    cmd.push('');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %check if field is set ');
	cmd.push('    %-----------------------------------------------------------------------');
    cmd.push('');
	cmd.push( entity.isSetFunc(1));
	cmd.push( entity.isContainedFunc(1));
	cmd.push( entity.getPropModelFunc(1));
    cmd.push('');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %file access');
	cmd.push('    %---------------------------------------------------------------------------');      
    cmd.push('');
	cmd.push('    function load(' + entity.objName() + ',filePath)');
	cmd.push('        if ~(exist(\'filePath\',\'var\')) ');
	cmd.push('        	filePath = strcat(' + entity.objName() + '.name, \'.h5\'); ');
	cmd.push('        end ');
	cmd.push('   ');
    cmd.push('       ' + entity.objName() + '.storageBackEndType = \'hdf5\';');
	cmd.push('		');
	cmd.push('	    ' + entity.objName() + '.' + entity.makeInternal('FilePath') + ' = filePath;');
	cmd.push('	    grpHandle = \'/\';');
	cmd.push('		');
	cmd.push('        if (~exist(filePath,\'file\'))');
	cmd.push('            error([\'file \' filePath \' does not exist\']);');
	cmd.push('        end');
	cmd.push('		');
	cmd.push('        if (strcmpi(' + entity.objName() + '.storageBackEndType,\'hdf5\'))');
	cmd.push('            ' + entity.objName() + '.loadFromHDF5Handle(grpHandle);');
	cmd.push('        else');
	cmd.push('           error([\'storage back-end \' ' + entity.objName() + '.storageBackEndType \' is not defined.\']);');
	cmd.push('        end');
	cmd.push('		   ');
	cmd.push('    end');
	cmd.push('    %---------------------------------------------------------------------------');
    cmd.push('');
	cmd.push('    function save(' + entity.objName() + ',filePath)');
	cmd.push('        if ~(exist(\'filePath\',\'var\'))'); 
	cmd.push('            filePath = strcat(' + entity.objName() + '.name, \'.h5\'); ');
	cmd.push('        end ');
	cmd.push('           ');
	cmd.push('        ' + entity.objName() + '.storageBackEndType = \'hdf5\';');
	cmd.push('        ');
	cmd.push('        %fcpl = H5P.create(\'H5P_FILE_CREATE\');');
	cmd.push('        %fapl = H5P.create(\'H5P_FILE_ACCESS\');');
	cmd.push('        %fid = H5F.create(filePath,\'H5F_ACC_TRUNC\',fcpl,fapl);');
	cmd.push('        ');
	cmd.push('        ' + entity.objName() + '.' + entity.makeInternal('FilePath') + ' = filePath;');
	cmd.push('        grpHandle = \'/\';');
	cmd.push('        ');
	cmd.push('        if (exist(filePath,\'file\'))');
	cmd.push('        	delete(filePath);');
	cmd.push('        end');
	cmd.push('        ');
	cmd.push('        if (strcmpi(' + entity.objName() + '.storageBackEndType,\'hdf5\'))');
	cmd.push('            ' + entity.objName() + '.saveToHDF5Handle(grpHandle);');
	cmd.push('        else');
	cmd.push('           error([\'storage back-end \' ' + entity.objName() + '.storageBackEndType \' is not defined.\']);');
	cmd.push('        end');
	cmd.push('       ');
	cmd.push('        %H5F.close(fid);');
	cmd.push('    end');
	cmd.push('    %---------------------------------------------------------------------------');
    cmd.push('');
	cmd.push( entity.hdf5DataType(1));
    cmd.push('');
	cmd.push('    %---------------------------------------------------------------------------');
	cmd.push( entity.loadFromHDF5Handle(1));
	cmd.push('    %---------------------------------------------------------------------------');
	cmd.push( entity.saveToHDF5Handle(1));
	cmd.push('');
	cmd.push('    %---------------------------------------------------------------------------');
	cmd.push('    end %methods ');
	cmd.push('    %***********************************************************************');
    cmd.push('');
	cmd.push('    %***********************************************************************');
	cmd.push('    methods (Access = protected, Hidden)');
	cmd.push('    %---------------------------------------------------------------------------');
    cmd.push('');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %Array update size function');
	cmd.push('    %-----------------------------------------------------------------------');
    cmd.push('');
	cmd.push( entity.arraysUpdateSize(1));
    cmd.push('');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %file access, Load');
	cmd.push('    %---------------------------------------------------------------------------');
	cmd.push('');
	cmd.push( entity.loadDataFromHDF5Handle(1));
	cmd.push('    ');
	cmd.push( entity.loadFromHDF5HandleItem(1));
    cmd.push('');
	cmd.push( entity.loadFromHDF5HandleItemAtomicSingle(1));
    cmd.push('');
	cmd.push( entity.loadFromHDF5HandleItemAtomicArray(1));
    cmd.push('');
	cmd.push( entity.loadFromHDF5HandleItemNonAtomicSingle(1));
    cmd.push('');
	cmd.push('    %-----------------------------------------------------------------------');
	cmd.push('    %file access, Save');
	cmd.push('    %---------------------------------------------------------------------------');
    cmd.push('');
	cmd.push( entity.saveDataToHDF5Handle(1));
	cmd.push('');
	cmd.push( entity.saveToHDF5HandleItem(1));
    cmd.push('');
	cmd.push( entity.saveToHDF5HandleItemAtomicSingle(1));
    cmd.push('');
	cmd.push( entity.saveToHDF5HandleItemAtomicArray(1));
    cmd.push('');
	cmd.push( entity.saveToHDF5HandleItemNonAtomicSingle(1));
    cmd.push('');
	cmd.push( entity.saveToHDF5HandleItemNonAtomicArray(1));
    cmd.push('');
	cmd.push('    %---------------------------------------------------------------------------');
	cmd.push('    end %methods (Access = protected, Hidden)');
	cmd.push('    %***********************************************************************');
	cmd.push('end %end of class ' + entity.getClassName());
	cmd.push('%**************************************************************************');
    cmd.push('');
	cmd.push('');
	cmd.push('%******************************************************************************');
	
	return cmd.join('\n'); 
};

/*----------------------------------------------------------------------------*/
//module.exports = function(model) { return new PythonBase(model); };
exports.generator = new MatlabGenerator();
